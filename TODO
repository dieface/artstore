hw3-1:
 ☐ don't work? 
    users_path is the relative path (/users/1). 
    For an email, you want the absolute path, 
    so use users_url(@user), which will give http://myapp.com/users/1 instead.
 ☐ only_path mean ?
    <%= link_to "here", :controller => "contacts", :action => "confirm",
    :only_path => false, :id => 17, :host => "example.com" %>

 ☐ How to get error in html?
hw3-2:
 ☐ <<?
   production：
     <<: *defaults

   Note: Certain Ruby/Bundler versions include a version of the Psych YAML parser which incorrectly handles merges (the `<<` in the example above.) 

 ☐ syck?
    If your default settings seem to be overwriting your environment-specific settings, including the following lines in your config/boot.rb file may solve the problem

    require 'yaml'
    YAML::ENGINE.yamler= 'syck'

 ☐ what is that? (ex. ||=)
    4. Optional / dynamic settings

    Often, you will want to handle defaults in your application logic itself, to reduce the number of settings you need to put in your YAML file. You can access an optional setting by using Hash notation

    >> Settings.messaging.queue_name
    => Exception: Missing setting 'queue_name' in 'message' section in 'application.yml'

    >> Settings.messaging['queue_name']
    => nil

    >> Settings.messaging['queue_name'] ||= 'user_mail'
    => "user_mail"

    >> Settings.messaging.queue_name
    => "user_mail"
    Modifying our model example

    class Post < ActiveRecord::Base
      self.per_page = Settings.posts['per_page'] || Settings.pagination.per_page
    end
    This would allow you to specify a custom value for per_page just for posts, or to fall back to your default value if not specified.


hw3-4:
 ☐ why def function with a "!"
   OrderPlacingService.new(current_cart, @order).place_order!

   def place_order!
   end


購物: 
 ✔ 身為消費者，我要在前台能夠找到商品並加到購物車 @done (14-06-13 06:24)
 ✔ 身為消費者，我要在前台能看到購物車裡面的明細 @done (14-06-13 07:02)
 ✔ 身為消費者，我要在前台能夠將多樣商品加到購物車，並生成一張訂單 @done (14-06-13 13:22)
 ✔ 身為消費者，當系統生成一張訂單後，我可以填寫寄送資訊，並且用信用卡結帳 @done (14-06-13 14:47)
 ✔ 身為消費者，當我下單時，我的信箱要能收到一張下單確認信 @done (14-06-13 17:44)
 ✔ 訂單狀態應分為未結帳、已結帳、出貨中、已出貨、辦理退貨 @done (14-06-13 17:44)
 ☐ 身為消費者，當我用信用卡結帳後，我的信箱要能收到一張訂購完成信
 ✔ 身為消費者，當我在結賬後，購物⾞應自動清空 @done (14-06-20 01:01)
      ✔ 清空購物⾞ @done (14-06-20 00:36)
 ✔ 身為消費者，我可以從購物車內刪掉某些物品 @done (14-06-20 00:41)
 ✔ 身為消費者，我可以從購物車內更新購買數量 @done (14-06-20 00:54)
 ✔ 購物車的總價 => 小計 x 數量 @done (14-06-20 00:54)
 ✔ 數量為 0 的貨物不能「購買」 @done (14-06-20 00:56)
 ✔  訂單支援「多重購買數量」 @done (14-06-20 01:00)
 ✔ 建立 account/orders  可以看到該使用者過去所有訂單 @done (14-06-20 01:08)
 ✔ 結賬後跳轉到 account/orders#index @done (14-06-20 01:10)

Admin 管理訂單:
  ✔ 身為管理者，可以在後台看訂單，訂單狀態分為未結帳、已結帳、出貨中、已出貨、辦理退貨 @done (14-06-20 01:27)
  ✔ 身為管理者，我可以在後台對單張訂單做狀態改變 @done (14-06-20 01:56)
     ✔ admin 的 order 列表應要能顯示訂單狀態 @done (14-06-20 01:56)
  ☐ 身為管理者，當我在將商品設為已出貨時，消費者應該收到一張已出貨的通知信  
  ☐ 身為商家，當消費者確定購物結帳後，該商品的庫存必須按照數量減少


Admin:
  ✔ Admin Should able to see admin panel link in dropdown menu @done (14-06-13 01:59)
    Product:
      ✔ Refine with Product List with table @done (14-06-13 02:14)
      ✔ should able update image when create product @done (14-06-13 04:09)
      ☐ should able to upload image after update

其他:
 ✔ 套 Bootstrap 版 @done (14-06-12 18:33)
   ✔  Login / Logout using bootstrap nav @done (14-06-12 18:33)
   ✔ SimpleForm with Bootstrap @done (14-06-13 02:39)
 ✔ 安裝 Carrierwave @done (14-06-13 03:21)
 ☐ Search function ( using Ransack )

有空想做的:
 ☐ 重新整理登入 / 登出畫面
 ☐ 加入 Facebook Login 


--- ✄ -----------------------

身為商家的管理者，我要能夠在後台上架我的東西，並設定能夠販賣:
 ✔ 管理者必須要有一個後台 @done (14-06-12 17:56)
 ✔ 後台必須要可以新增產品 @done (14-06-12 17:56)
 ✔ 產品內容必須要有標題、文字、數量 @done (14-06-12 18:02)
 ✔ 產品必須要有價格 @done (14-06-13 03:21)
 ✔ 產品內容必須要有圖片 @done (14-06-13 03:21)

身為商家的管理者，我要能夠在後台設定權限，權限分成管理者以及消費者:
   ✔ 身為管理者，才可以進入後台 @done (14-06-13 03:39)
   ✔ 身為管理者，必須要登入且是 admin @done (14-06-13 03:39)
   ✔ 管理者身份必須要被分為 admin / user @done (14-06-13 03:39)


任何使用者都要能看到首頁:
  ✔ 首頁應該要能夠看到所有商品 @done (14-06-13 03:39)
  ✔ 任何使用者都要能看到首頁 @done (14-06-13 03:39)



任何使用者都要能看到產品頁:
 ✔ 產品頁應該能要看到標題 @done (14-06-13 04:09)
 ✔ 產品頁應該要能看到敘述 @done (14-06-13 04:09)
 ✔ 產品頁應該要能看到圖片 @done (14-06-13 04:09)

